<?xml version="1.0"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
<!--
    Macros replaced during service start:
        YARN_RM_HOST
        WORKER_MEMORY = 10240
        WORKER_CORES  = 16
-->
<configuration>
    <property>
        <name>yarn.resourcemanager.hostname</name>
        <value>{YARN_RM_HOST}</value>
        <description>The hostname of the RM.</description>
    </property>
    <property>
        <name>yarn.resourcemanager.bind-host</name>
        <value>0.0.0.0</value>
        <description>Resource manager listens to all interfaces</description>
    </property>
    <property>
        <name>yarn.nodemanager.hostname</name>
        <value>{YARN_NODE_NAME}</value>
        <description>The hostname of the NM, this is also used as the spark executor's node name.</description>
    </property>
    <property>
        <name>yarn.nodemanager.bind-host</name>
        <value>0.0.0.0</value>
        <description>Node manager listens to all interfaces</description>
    </property>
    <property>
        <name>yarn.scheduler.minimum-allocation-mb</name>
        <value>128</value>
        <description>Minimum limit of memory to allocate to each container request at the Resource Manager.</description>
    </property>
    <property>
        <name>yarn.scheduler.maximum-allocation-mb</name>
        <value>10240</value>
        <description>Maximum limit of memory to allocate to each container request at the Resource Manager.</description>
    </property>
    <property>
        <name>yarn.scheduler.minimum-allocation-vcores</name>
        <value>1</value>
        <description>The minimum allocation for every container request at the RM, in terms of virtual CPU cores. Requests lower than this won't take effect, and the specified value will get allocated the minimum.</description>
    </property>
    <property>
        <name>yarn.scheduler.maximum-allocation-vcores</name>
        <value>32</value>
        <description>The maximum allocation for every container request at the RM, in terms of virtual CPU cores. Requests higher than this won't take effect, and will get capped to this value.</description>
    </property>
    <property>
        <name>yarn.nodemanager.resource.memory-mb</name>
        <value>{WORKER_MEMORY}</value>
        <description>Physical memory, in MB, to be made available to running containers</description>
    </property>
    <property>
        <name>yarn.nodemanager.resource.cpu-vcores</name>
        <value>{WORKER_CORES}</value>
        <description>Number of CPU cores that can be allocated for containers.</description>
    </property>

<!-- kerberos start -->
{KERBEROS_BEGIN}
<property>
  <name>yarn.resourcemanager.principal</name>
  <value>{YARNSERVICE_PRINCIPAL}</value>
</property>

<property>
  <name>yarn.resourcemanager.keytab</name>
  <value>{YARNSERVICE_KEYTAB_FILE}</value>
</property>

<property>
  <name>yarn.nodemanager.principal</name>
  <value>{YARNSERVICE_PRINCIPAL}</value>
</property>

<property>
  <name>yarn.nodemanager.keytab</name>
  <value>{YARNSERVICE_KEYTAB_FILE}</value>
</property>

<property>
  <name>yarn.nodemanager.container-executor.class</name>
  <value>org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor</value>
</property>

<property>
  <name>yarn.nodemanager.linux-container-executor.group</name>
  <value>osa</value>
</property>

<property>
  <name>yarn.web-proxy.keytab</name>
  <value>{YARNSERVICE_KEYTAB_FILE}</value>
</property>

<property>
  <name>yarn.web-proxy.principal</name>
  <value>{YARNSERVICE_PRINCIPAL}</value>
</property>
{KERBEROS_END}
<!-- kerberos end -->

</configuration>
